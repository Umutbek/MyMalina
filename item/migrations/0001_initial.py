# Generated by Django 3.1 on 2021-10-11 22:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('user', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('currency', models.CharField(max_length=200, null=True)),
                ('cost', models.FloatField()),
                ('sostav', models.TextField(blank=True, null=True)),
                ('gram', models.FloatField(blank=True, null=True)),
                ('ccal', models.FloatField(blank=True, null=True)),
                ('protein', models.FloatField(blank=True, null=True)),
                ('fats', models.FloatField(blank=True, null=True)),
                ('carbo', models.FloatField(blank=True, null=True)),
                ('costsale', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ItemAdditive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('cost', models.FloatField(default=0)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.item')),
            ],
        ),
        migrations.CreateModel(
            name='ItemWithQuantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('total', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('addedadditives', models.ManyToManyField(to='item.ItemAdditive')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='item.item')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users_item', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModelCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check', models.IntegerField(null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('visibility', models.BooleanField(default=True)),
                ('clientid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usercart', to='user.regularaccount')),
                ('listitem', models.ManyToManyField(to='item.ItemWithQuantity')),
                ('storeid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storecart', to='user.store')),
            ],
        ),
        migrations.CreateModel(
            name='ModelOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentType', django_fsm.FSMIntegerField(choices=[(1, 'Наличка'), (2, 'Пейбокс')], default=1)),
                ('paymentStatus', models.BooleanField(default=False)),
                ('status', django_fsm.FSMIntegerField(choices=[(1, 'Новый'), (2, 'Подтвержден'), (3, 'Отменен'), (4, 'Готово'), (5, 'В пути'), (6, 'Получен'), (7, 'Прибыл'), (8, 'Доставлено'), (9, 'Отказ клиента')], default=1)),
                ('iscourier', models.BooleanField(default=False)),
                ('timedelivery', models.CharField(blank=True, max_length=200, null=True)),
                ('quantityappliances', models.FloatField(blank=True, null=True)),
                ('ordertype', django_fsm.FSMIntegerField(choices=[(1, 'Доставка'), (2, 'Самовывоз')], default=1)),
                ('scancode', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=0)),
                ('declinereason', models.CharField(blank=True, max_length=200, null=True)),
                ('refusereason', models.CharField(blank=True, max_length=200, null=True)),
                ('scorepaid', models.IntegerField(default=0)),
                ('scoregot', models.IntegerField(default=0)),
                ('address', models.JSONField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('reporttotal', models.IntegerField(default=0)),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.modelcart')),
                ('clientId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientId', to='user.regularaccount')),
                ('storeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storeId', to='user.store')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField(default=0)),
                ('test', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UserFavouriteItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fav_items', to='item.item')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScoreActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scoregot', models.IntegerField(blank=True, null=True)),
                ('scorepaid', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordersave', to='item.modelorder')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storesave', to='user.store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usersave', to='user.regularaccount')),
            ],
        ),
        migrations.CreateModel(
            name='SavePaymentAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentType', models.CharField(max_length=200)),
                ('totalprice', models.FloatField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_payment_save', to='item.modelorder')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_payment_save', to='user.store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_payment_save', to='user.regularaccount')),
            ],
        ),
        migrations.CreateModel(
            name='SaveOrderActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prev_status', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('changedby', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='saveorder', to='item.modelorder')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='savestore', to='user.store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saveuser', to='user.regularaccount')),
            ],
        ),
        migrations.CreateModel(
            name='RemoveItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='item.modelcart')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='removeitem', to='item.item')),
            ],
        ),
        migrations.CreateModel(
            name='OrderReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=5000, verbose_name='Сообщение')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='item.modelorder')),
                ('star', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.ratingstar', verbose_name='звезда')),
                ('store', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.store')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_review', to='user.regularaccount')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='ItemImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.TextField(null=True)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='item.item')),
            ],
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.store')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='itemcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.itemcategory'),
        ),
        migrations.AddField(
            model_name='item',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.store'),
        ),
        migrations.AddField(
            model_name='item',
            name='taketogether',
            field=models.ManyToManyField(related_name='_item_taketogether_+', to='item.Item'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('street', models.CharField(blank=True, max_length=200, null=True)),
                ('numhouse', models.CharField(blank=True, max_length=200, null=True)),
                ('entrance', models.CharField(blank=True, max_length=200, null=True)),
                ('floor', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('longitude', models.CharField(blank=True, max_length=200, null=True)),
                ('latitude', models.CharField(blank=True, max_length=200, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
